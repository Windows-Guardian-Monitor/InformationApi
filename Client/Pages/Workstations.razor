@page "/workstations"
<PageTitle>Máquinas</PageTitle>
@using ClientServer.Shared.DataTransferObjects
@using ClientServer.Shared.Reponses
@inject HttpClient Http

<AuthorizeView>
	<Authorized>
		<h3>Relatório de Máquinas</h3>

		@if (_workstations is null)
		{
			<p><em>Carregando máquinas...</em></p>
		}
		else
		{
			@if (_workstations.Count is 0)
			{
				<p><em>Não foram encontradas máquinas</em></p>
			}
			else
			{
				@foreach (var workstaion in _workstations)
				{
					<ClientServer.Client.Pages.Components.WorkstationListItem Workstation="workstaion" />
				}
			}
		}
	</Authorized>
	<NotAuthorized>
		<ClientServer.Client.Pages.Components.AccessDenied />
	</NotAuthorized>
</AuthorizeView>

@code {
	private const string _endpoint = "Information/GetAllWorkstations";

	private List<SimpleWorkstationItem> _workstations;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var url = $"{InformationHandler.GetUrl()}{_endpoint}";

			var response = await Http.GetFromJsonAsync<AllWorkstationsResponse>(url);

			_workstations = response.Workstations;
		}
		catch (Exception e)
		{
			Console.WriteLine(e);
		}

		await base.OnInitializedAsync();
	}
}
