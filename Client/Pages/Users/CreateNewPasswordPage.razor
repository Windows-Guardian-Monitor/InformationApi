@page "/newPassword"
@using ClientServer.Client.Operators.Contracts
@using ClientServer.Client.Services.Contracts
@using ClientServer.Shared.DataTransferObjects.Authentication
@using System.Text.Json
@using InformationHandlerApi.Business.Responses
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@inject HttpClient Http
@inject ICustomSnackbarOperator _snackbarOperator
@inject IUserSessionService _userSessionService
<PageTitle>Criar Senha</PageTitle>


<ClientServer.Client.Pages.Components.CustomSnackbar SnackbarOperator="_snackbarOperator" />
<h3>Criar nova senha</h3>
<EditForm Context="notAuthorizedContextEditForm" Model="newPasswordDto" OnSubmit="HandleNewPassword">
	<label for="userName">Nome de usuário</label>
	<InputText id="username" @bind-Value="newPasswordDto.UserName" />

	<label for="password">Senha</label>
	<InputText type="password" id="password" @bind-Value="newPasswordDto.Password" />

	<label for="password">Por favor repita a senha</label>
	<InputText type="password" id="passwordRepeat" @bind-Value="newPasswordDto.PasswordRepeat" />

	<Button Type="ButtonType.Submit" Class="btn btn-primary">Criar senha</Button>
</EditForm>

@code {
	protected override Task OnInitializedAsync()
	{
		_snackbarOperator.ShowInformationMessage(
			"É necessário alterar sua senha");
		return base.OnInitializedAsync();
	}

	NewPasswordDto newPasswordDto = new NewPasswordDto();
	async Task HandleNewPassword()
	{
		try
		{
			if (string.IsNullOrEmpty(newPasswordDto.UserName))
			{
				_snackbarOperator.ShowWarningMessage("Por favor preencha o nome de usuário");
				return;
			}

			if (string.IsNullOrEmpty(newPasswordDto.Password))
			{
				_snackbarOperator.ShowWarningMessage("Por favor preencha a senha");
				return;
			}

			if (string.IsNullOrEmpty(newPasswordDto.PasswordRepeat))
			{
				_snackbarOperator.ShowWarningMessage("Por favor preencha o segundo campo de senha");
				return;
			}

			var result = await Http.PostAsJsonAsync("https://localhost:7102/auth/NewPassword", newPasswordDto);

			var json = await result.Content.ReadAsStringAsync();

			var loginResponse = JsonSerializer.Deserialize<StandardResponse>(json);

			if (loginResponse.Success is false)
			{
				_snackbarOperator.ShowErrorMessage(loginResponse.Message);
				return;
			}

			_snackbarOperator.ShowInformationMessage("Senha alterada com sucesso", "Por favor faça login novamente");
		}
		catch (Exception e)
		{
			_snackbarOperator.ShowErrorMessage(e.Message);
		}
	}
}
